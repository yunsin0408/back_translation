<?xml version="1.0"?>
<root xmlns:dc="http://www.purl.org/dc/elements/1.1/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.s1000d.org/S1000D_5-0/xml_schema_flat/descript.xsd">
  <introduction>
    <para>The s1kd-brexcheck tool is used for checking S1000D CSDB objects against BREX (Business Rules eXchange) data modules.</para>
  </introduction>
  <commandLineOptions>
    <para>The following options are available:</para>
    <itemizedList>
      <listItem><para>-b: Specify a BREX file to validate against.</para></listItem>
      <listItem><para>-c: Enable checking of object values specified in the BREX module.</para></listItem>
      <listItem><para>-q or --quiet: Disable printing of errors to stderr.</para></listItem>
      <listItem><para>-r or --recursive: Recursively check all CSDB objects found under the given directory path.</para></listItem>
      <listItem><para>-v or --verbose: Increase verbosity of output.</para></listItem>
      <listItem><para>-x or --xpath: Specify an XPath expression for use with the -c option.</para></listItem>
    </itemizedList>
  </commandLineOptions>
  <exitStatus>
    <para>The exit status of the tool is as follows:</para>
    <numberedList>
      <listItem><para>0: Check completed successfully, and no CSDB objects had BREX errors.</para></listItem>
      <listItem><para>1: Check completed successfully, but some CSDB objects had BREX errors.</para></listItem>
      <listItem><para>2: One or more CSDB objects specified could not be read.</para></listItem>
      <listItem><para>3: A referenced BREX data module could not be found.</para></listItem>
      <listItem><para>5: The number of paths or CSDB objects specified exceeded the available memory.</para></listItem>
    </numberedList>
  </exitStatus>
  <exampleUsage>
    <para>$ DMOD=DMC-EX-A-00-00-00-00A-040A-D_000-01_EN-CA.XML</para>
    <para>$ BREX=DMC-S1000D-G-04-10-0301-00A-022A-D_001-00_EN-US.XML</para>
    <para>$ s1kd-brexcheck -b $BREX $DMOD</para>
  </exampleUsage>
  <xmlReportFormat>
    <para>The tool can generate an XML report of the BREX errors found. The format is as follows:</para>
    <brexCheck>
      <document path="DMC-EX-A-00-00-00-00A-040A-D_000-01_EN-CA.XML">
        <brex path="DMC-S1000D-G-04-10-0301-00A-022A-D_001-00_EN-US.XML">
          <error fail="yes">
            <brDecisionRef brDecisionIdentNumber="BREX-S1-00052"/>
            <objectPath allowedObjectFlag="0">...</objectPath>
            <objectUse>Only when the reference target is a step can the value of attribute internalRefTargetType be irtt08 (Chap 3.9.5.2.1.2, Para 2.1).</objectUse>
            <object line="52" xpath="/dmodule[1]/content[1]/description[1]/para[2]/internalRef[1]">
              <internalRef internalRefId="stp-0001" internalRefTargetType="irtt08"/>
            </object>
          </error>
        </brex>
      </document>
    </brexCheck>
  </xmlReportFormat>
  <supportedXPathSyntax>
    <para>The supported XPath syntax depends on the XPath engine used:</para>
    <itemizedList>
      <listItem><para>libxml2 (default): XPath 1.0, partial support for EXSLT functions.</para></listItem>
      <listItem><para>Saxon (experimental): XPath 1.0, XPath 2.0, XPath 3.0.</para></listItem>
    </itemizedList>
    <para>Information on which XPath engine is in use can be obtained from the --version option.</para>
  </supportedXPathSyntax>
  <objectValueChecking>
    <para>The tool supports checking of object values specified in the BREX module using the -c option. The valueForm attribute can be used to specify what kind of notation the valueAllowed attribute will contain:</para>
    <itemizedList>
      <listItem><para>single: A single, exact value.</para></listItem>
      <listItem><para>range: Values given in the S1000D range/set notation (e.g., "a~c" or "a|b|c").</para></listItem>
      <listItem><para>pattern: A regular expression.</para></listItem>
    </itemizedList>
    <para>If the valueForm attribute is omitted, it will assume the value is in the single notation.</para>
  </objectValueChecking>
</root>